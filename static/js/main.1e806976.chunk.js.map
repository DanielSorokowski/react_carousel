{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","handleNextClick","step","itemWidth","imagesNumber","frameSize","infinite","max","setState","handlePrevClick","this","props","images","animationDuration","length","imageElements","map","image","index","style","transition","transform","src","alt","String","width","className","type","onClick","React","Component","App","handleStepChange","event","value","Number","target","handleFrameSizeChange","handleItemWidthChange","handleAnimationDurationChange","handleInfiniteChange","Boolean","action","htmlFor","name","id","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e806976.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\ntype State = {\n  position: number,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  handleNextClick = (\n    step: number,\n    itemWidth: number,\n    imagesNumber: number,\n    frameSize: number,\n    position: number,\n    infinite: boolean,\n  ) => {\n    const max = position\n      - (step * itemWidth) <= -itemWidth * (imagesNumber - frameSize);\n\n    if (max && infinite) {\n      this.setState({ position: 0 });\n    } else if (max) {\n      this.setState({ position: -itemWidth * (imagesNumber - frameSize) });\n    } else {\n      this.setState(state => ({\n        position: state.position - (step * itemWidth),\n      }));\n    }\n  };\n\n  handlePrevClick = (\n    step: number,\n    itemWidth: number,\n    imagesNumber: number,\n    frameSize: number,\n    infinite: boolean,\n  ) => {\n    if (this.state.position + (step * itemWidth) >= 0 && infinite) {\n      this.setState({ position: -itemWidth * (imagesNumber - frameSize) });\n    } else if (this.state.position + (step * itemWidth) >= 0) {\n      this.setState({ position: 0 });\n    } else {\n      this.setState(state => ({\n        position: state.position + (step * itemWidth),\n      }));\n    }\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n\n    const imagesNumber = images.length;\n\n    const imageElements = images.map((image, index) => (\n      <li\n        style={{\n          transition: `transform ${animationDuration}ms`,\n          transform: `translateX(${position}px)`,\n        }}\n      >\n        <img src={image} alt={String(index)} width={itemWidth} />\n      </li>\n    ));\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n          }}\n        >\n          {imageElements}\n        </ul>\n\n        <button\n          type=\"button\"\n          data-cy=\"prev\"\n          onClick={() => this.handlePrevClick(\n            step,\n            itemWidth,\n            imagesNumber,\n            frameSize,\n            infinite,\n          )}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={() => this.handleNextClick(\n            step,\n            itemWidth,\n            imagesNumber,\n            frameSize,\n            position,\n            infinite,\n          )}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleStepChange = (event: any) => {\n    const value = Number(event.target.value);\n\n    this.setState({ step: value });\n  };\n\n  handleFrameSizeChange = (event: any) => {\n    const value = Number(event.target.value);\n\n    this.setState({ frameSize: value });\n  };\n\n  handleItemWidthChange = (event: any) => {\n    const value = Number(event.target.value);\n\n    this.setState({ itemWidth: value });\n  };\n\n  handleAnimationDurationChange = (event: any) => {\n    const value = Number(event.target.value);\n\n    this.setState({ animationDuration: value });\n  };\n\n  handleInfiniteChange = (event: any) => {\n    const value = Boolean(event.target.value);\n\n    this.setState({ infinite: value });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form className=\"form\" action=\"\">\n          <label htmlFor=\"stepId\">\n            Step:\n          </label>\n          <input\n            type=\"number\"\n            name=\"stepId\"\n            id=\"stepId\"\n            value={step}\n            onChange={this.handleStepChange}\n          />\n          <label htmlFor=\"frameId\">\n            Frame Size:\n          </label>\n          <input\n            type=\"number\"\n            name=\"frameId\"\n            id=\"frameId\"\n            value={frameSize}\n            onChange={this.handleFrameSizeChange}\n          />\n          <label htmlFor=\"itemId\">\n            Item Width:\n          </label>\n          <input\n            type=\"number\"\n            name=\"itemId\"\n            id=\"itemId\"\n            value={itemWidth}\n            onChange={this.handleItemWidthChange}\n          />\n          <label htmlFor=\"animationDuration\">\n            Animation Duration:\n          </label>\n          <input\n            type=\"number\"\n            name=\"animationDuration\"\n            id=\"animationDuration\"\n            value={animationDuration}\n            onChange={this.handleAnimationDurationChange}\n          />\n          <label htmlFor=\"infinite\">\n            Infinite:\n          </label>\n          <input\n            type=\"checkbox\"\n            name=\"infinite\"\n            id=\"infinite\"\n            onChange={this.handleInfiniteChange}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}